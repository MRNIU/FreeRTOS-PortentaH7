
# This file is a part of MRNIU/FreeRTOS-PortentaH7 (https://github.com/MRNIU/FreeRTOS-PortentaH7).
#
# Makefile for MRNIU/FreeRTOS-PortentaH7.

TARGET = arm-none-eabi
MAKE = make
CC = $(TARGET)-gcc
CXX = $(TARGET)-g++
LD = $(TARGET)-ld
AS = $(TARGET)-as
AR = $(TARGET)-ar
OBJCPY = $(TARGET)-objcopy
STRIP = $(TARGET)-strip
NM = $(TARGET)-gcc-nm
READELF = $(TARGET)-readelf

mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
ROOT_DIR := $(patsubst %/,%,$(dir $(mkfile_path)))
CURR_DIR := $(shell pwd)

MCU :=

CORE_$(MCU)_DIR = $(ROOT_DIR)/C$(MCU)
CORE_$(MCU)_INCLUDE_DIR = $(ROOT_DIR)/C$(MCU)/include

DEFINES_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/defines.txt
INCLUDES_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/includes.txt
CFLAGS_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/cflags.txt
CXXFLAGS_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/cxxflags.txt
LDFLAGS_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/ldflags.txt
LINKERSCRIPT_$(MCU) = $(CORE_$(MCU)_INCLUDE_DIR)/ldscript.ld
STATIC_LIB = $(CORE_$(MCU)_DIR)/libs/stm32h7xx.a

FREERTOS_DIR = $(ROOT_DIR)/FreeRTOS
FREERTOS_INCLUDE_DIR = $(FREERTOS_DIR)/include
FREERTOS_IAR_DIR = $(FREERTOS_DIR)/portable/ARM_CM4F_GCC
FREERTOS_CMSIS_RTOS_DIR = $(FREERTOS_DIR)/CMSIS_RTOS_V2

STM32H7XXHAL_INCLUDE_DIR = $(ROOT_DIR)/STM32H747/include

INO_DIR = $(ROOT_DIR)/test

DFU = dfu-util

ifeq ($(MCU),M4)
	DFU_FLAG = --device 0x2341:0x035b -D $(INO_DIR)/test.elf.bin -a0 --dfuse-address=0x08100000:leave
endif
ifeq ($(MCU),M7)
	DFU_FLAG = --device 0x2341:0x035b -D $(INO_DIR)/test.elf.bin -a0 --dfuse-address=0x08040000:leave
endif

exclude_dirs := devlog

ifeq ($(MCU),M4)
	exclude_dirs += CM7
endif
ifeq ($(MCU),M7)
	exclude_dirs += CM4
endif

dirs := $(shell find . -maxdepth 1 -type d)
dirs := $(basename $(patsubst ./%, %, $(dirs)))
dirs := $(filter-out $(exclude_dirs), $(dirs))
SUB_DIR := $(dirs)

CXXFLAGS_INO_$(MCU) = -c -w -g -Os -nostdlib \
				  @$(DEFINES_$(MCU)) @$(CXXFLAGS_$(MCU)) @$(INCLUDES_$(MCU)) \
				  -x c++ \
				  -I$(FREERTOS_INCLUDE_DIR) -I$(CORE_$(MCU)_INCLUDE_DIR) \
				  -I$(FREERTOS_IAR_DIR) -I$(FREERTOS_CMSIS_RTOS_DIR) \
				  -I$(STM32H7XXHAL_INCLUDE_DIR)

ifeq ($(MCU),M4)
	CXXFLAGS_INO_$(MCU) += -MMD -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16
endif
ifeq ($(MCU),M7)
	CXXFLAGS_INO_$(MCU) += -MMD -mcpu=cortex-m7 -mfloat-abi=softfp -mfpu=fpv5-d16
endif

CFLAGS_FREERTOS_$(MCU) = -c -Wall -Wextra -g -Os -nostdlib \
				  -I$(FREERTOS_INCLUDE_DIR) -I$(CORE_$(MCU)_INCLUDE_DIR) \
				  -I$(FREERTOS_IAR_DIR) -I$(STM32H7XXHAL_INCLUDE_DIR) \
				  -I$(FREERTOS_CMSIS_RTOS_DIR) \
				  -DSTM32H747xx

ifeq ($(MCU),M4)
	CFLAGS_FREERTOS_$(MCU) += -MMD -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -DCORE_CM4
endif
ifeq ($(MCU),M7)
	CFLAGS_FREERTOS_$(MCU) += -MMD -mcpu=cortex-m7 -mfloat-abi=softfp -mfpu=fpv5-d16 -DCORE_CM7
endif

ifeq ($(MCU),M4)
	LDFLAGS_ALL_$(MCU) = -Wl,--gc-sections -Wall -Wextra -Wl,--as-needed \
					@$(LDFLAGS_$(MCU)) \
					-T$(LINKERSCRIPT_$(MCU)) \
					-Wl,-Map,$(INO_DIR)/test_m4.map --specs=nosys.specs \
					-o $(INO_DIR)/test_m4.elf \
					-Wl,--whole-archive \
					$(STATIC_LIB) \
					-Wl,--no-whole-archive \
					-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys \
					-Wl,--end-group
endif

ifeq ($(MCU),M7)
	LDFLAGS_ALL_$(MCU) = -Wl,--gc-sections -Wall -Wextra -Wl,--as-needed \
					@$(LDFLAGS_$(MCU)) \
					-T$(LINKERSCRIPT_$(MCU)) \
					-Wl,-Map,$(INO_DIR)/test_m7.map --specs=nosys.specs \
					-o $(INO_DIR)/test_m7.elf \
					-Wl,--whole-archive \
					$(STATIC_LIB) \
					-Wl,--no-whole-archive \
					-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys \
					-Wl,--end-group
endif
